{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nada\\\\Courses\\\\Rwad Masr React Web\\\\Projects\\\\noxe-movie-react\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Joi from \"joi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n  let {\n    saveDataUser\n  } = _ref;\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const getData = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    const validationErrors = validation();\n    if (validationErrors) {\n      setErrors(validationErrors);\n      return;\n    }\n    axios.post(\"http://hawas.runasp.net/api/v1/Login\", formData).then(res => {\n      console.log(res);\n      localStorage.setItem(\"Token\", res.data.jwt);\n      localStorage.setItem(\"currentUser\", formData.email);\n      saveDataUser();\n      navigate(\"/welcomePage\");\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Invalid email or password\");\n    });\n  };\n  const validation = () => {\n    const schema = Joi.object({\n      email: Joi.string().email({\n        minDomainSegments: 2,\n        tlds: {\n          allow: [\"com\", \"net\"]\n        }\n      }).required(),\n      password: Joi.string().min(8).max(30).pattern(new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]+$\")).required().messages({\n        \"string.base\": \"Password must be a string\",\n        \"string.empty\": \"Password cannot be empty\",\n        \"string.min\": \"Password must be at least {#limit} characters long\",\n        \"string.max\": \"Password must be less than or equal to {#limit} characters\",\n        \"string.pattern.base\": \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character\",\n        \"any.required\": \"Password is required\"\n      })\n    });\n    const {\n      error\n    } = schema.validate(formData, {\n      abortEarly: false\n    });\n    return error ? error.details : null;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-75 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Login Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), error.map((error, i) => error.type === \"string.pattern.base\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: \"password invalid\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error.message\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitLoginForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"email : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: getUser,\n          className: \"form-control mb-2\",\n          type: \"email\",\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"password : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: getUser,\n          className: \"form-control mb-2\",\n          type: \"password\",\n          id: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-info my-2\",\n          children: [isLoding ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-spinner fa-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this) : \"Login\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"At6bnbLwu2TBsCb+Zkg1d9sx5Ts=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useNavigate","React","useState","axios","Joi","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_ref","_s","saveDataUser","navigate","error","setError","errors","setErrors","formData","setFormData","email","password","getData","e","name","value","target","prevData","submitHandler","preventDefault","validationErrors","validation","post","then","res","console","log","localStorage","setItem","data","jwt","catch","err","_err$response","_err$response$data","response","message","schema","object","string","minDomainSegments","tlds","allow","required","min","max","pattern","RegExp","messages","validate","abortEarly","details","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","i","type","onSubmit","submitLoginForm","htmlFor","onChange","getUser","id","isLoding","_c","$RefreshReg$"],"sources":["D:/Nada/Courses/Rwad Masr React Web/Projects/noxe-movie-react/src/components/Login/Login.jsx"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Joi from \"joi\";\n\nexport default function Login({ saveDataUser }) {\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const getData = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const validationErrors = validation();\n    if (validationErrors) {\n      setErrors(validationErrors);\n      return;\n    }\n    axios\n      .post(\"http://hawas.runasp.net/api/v1/Login\", formData)\n      .then((res) => {\n        console.log(res);\n        localStorage.setItem(\"Token\", res.data.jwt);\n        localStorage.setItem(\"currentUser\", formData.email);\n        saveDataUser();\n        navigate(\"/welcomePage\");\n      })\n      .catch((err) => {\n        setError(err.response?.data?.message || \"Invalid email or password\");\n      });\n  };\n\n  const validation = () => {\n    const schema = Joi.object({\n      email: Joi.string()\n        .email({ minDomainSegments: 2, tlds: { allow: [\"com\", \"net\"] } })\n        .required(),\n      password: Joi.string()\n        .min(8)\n        .max(30)\n        .pattern(\n          new RegExp(\n            \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]+$\"\n          )\n        )\n        .required()\n        .messages({\n          \"string.base\": \"Password must be a string\",\n          \"string.empty\": \"Password cannot be empty\",\n          \"string.min\": \"Password must be at least {#limit} characters long\",\n          \"string.max\":\n            \"Password must be less than or equal to {#limit} characters\",\n          \"string.pattern.base\":\n            \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character\",\n          \"any.required\": \"Password is required\",\n        }),\n    });\n\n    const { error } = schema.validate(formData, { abortEarly: false });\n    return error ? error.details : null;\n  };\n\n  return (\n    <>\n      <div className=\"w-75 mx-auto\">\n        <h2 className=\"text-center\">Login Now</h2>\n        {error.map((error, i) =>\n          error.type === \"string.pattern.base\" ? (\n            <div key={i} className=\"alert alert-danger\">\n              password invalid\n            </div>\n          ) : (\n            <div key={i} className=\"alert alert-danger\">\n              {error.message}\n            </div>\n          )\n        )}\n        <form onSubmit={submitLoginForm}>\n          <label htmlFor=\"email\">email : </label>\n          <input\n            onChange={getUser}\n            className=\"form-control mb-2\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n          />\n\n          <label htmlFor=\"password\">password : </label>\n          <input\n            onChange={getUser}\n            className=\"form-control mb-2\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n          />\n\n          <button type=\"submit\" className=\"btn btn-outline-info my-2\">\n            {isLoding ? <i className=\"fas fa-spinner fa-spin\"></i> : \"Login\"}{\" \"}\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}