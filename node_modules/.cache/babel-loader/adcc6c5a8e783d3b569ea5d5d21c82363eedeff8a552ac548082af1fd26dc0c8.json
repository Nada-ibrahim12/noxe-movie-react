{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nada\\\\Courses\\\\Rwad Masr React Web\\\\Projects\\\\noxe-movie-react\\\\src\\\\components\\\\MovieDetails\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieDetails() {\n  _s();\n  let [movie_id, setMovie_id] = useState(null);\n  let parm = useParams();\n  let url_id = parm.id;\n  const apiKey = \"3f69a27835865c05f6ed1c043a44735a\";\n  async function getmovie(id) {\n    let {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key={c9fac173689f5f01ba1b0420f66d7093}&language=eg-US`);\n    setMovie_id(data);\n  }\n  useEffect(() => {\n    getmovie(url_id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movie_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-100\",\n          src: 'https://image.tmdb.org/t/p/w500' + (movie_id === null || movie_id === void 0 ? void 0 : movie_id.backdrop_path),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie_id === null || movie_id === void 0 ? void 0 : movie_id.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" my-3\",\n          children: [\"$\", movie_id === null || movie_id === void 0 ? void 0 : movie_id.overview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Budget : \", movie_id === null || movie_id === void 0 ? void 0 : movie_id.budget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"vote Count : \", movie_id === null || movie_id === void 0 ? void 0 : movie_id.vote_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vh-100 d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }, this)\n  }, void 0, false);\n}\n_s(MovieDetails, \"kiM+Uh+zoKPsv63KjawpkvulOE8=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["axios","React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetails","_s","movie_id","setMovie_id","parm","url_id","id","apiKey","getmovie","data","get","children","className","src","backdrop_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","overview","budget","vote_count","_c","$RefreshReg$"],"sources":["D:/Nada/Courses/Rwad Masr React Web/Projects/noxe-movie-react/src/components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nexport default function MovieDetails() {\n    let [movie_id, setMovie_id] = useState(null)\n    let parm = useParams();\n    let url_id = parm.id;\n    const apiKey = \"3f69a27835865c05f6ed1c043a44735a\";\n\n    async function getmovie(id) {\n        let { data } = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key={c9fac173689f5f01ba1b0420f66d7093}&language=eg-US`)\n        setMovie_id(data);\n    }\n    useEffect(() => {\n        getmovie(url_id);\n    }, [])\n    return (\n        <>\n            {movie_id ? <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <img className='w-100' src={'https://image.tmdb.org/t/p/w500' + movie_id?.backdrop_path} alt=\"\" />\n                </div>\n                <div className=\"col-md-9\">\n                    <h3>{movie_id?.title}</h3>\n                    <p className=' my-3'>${movie_id?.overview}</p>\n                    <ul>\n                        <li>Budget : {movie_id?.budget}</li>\n                        <li>vote Count : {movie_id?.vote_count}</li>\n                    </ul>\n                </div>\n            </div> : <div className='vh-100 d-flex justify-content-center align-items-center'>\n                <i className='fas fa-spinner fa-spin' ></i>\n            </div>}\n\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}